@model IList<Nop.Core.EUCookieLaw.ICookiePurpose> 
<script asp-location="Footer">
    $(document).ready(function () {
        $('#eu-cookie-bar-notification').show();

        $('#eu-cookie-accept-all').on('click', function () {
            var purposes = $("input[data-purpose]").map(function () {
                return $(this).data('purpose');
            }).get().join(',');
            //alert(purposes);
            setEUCookieLawPreferences(purposes);
        });

        $('#eu-cookie-accept-selected').on('click', function () {
            var purposes = $("input[data-purpose]:checked").map(function () {
                return $(this).data('purpose');
            }).get().join(',');
            //alert(purposes);
            setEUCookieLawPreferences(purposes);
        });

        $('#eu-cookie-accept-necessary').on('click', function () {
            //alert("");
            setEUCookieLawPreferences("");
        });

        $("input[name=purpose]").change(function () {
            showEUCookieLawSelectedButton();
        });

        initialiseEUCookieLawButtons();
    });

    function setEUCookieLawPreferences(purposes) {
        $.ajax({
            cache: false,
            type: "POST",
            url: "@Url.RouteUrl("EuCookieLawAccept")?purposes=" + purposes,
            dataType: "json",
            success: function (data, textStatus, jqXHR) {
                $('#eu-cookie-bar-notification').hide();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert('Cannot store value');
            }
        });
    }

    function initialiseEUCookieLawButtons() {
        if ($("input[data-purpose]").length == 0) {
            $('#eu-cookie-accept-all').hide();
        }
    }

    function showEUCookieLawSelectedButton() {
        $('#eu-cookie-accept-necessary').hide();
        $('#eu-cookie-accept-all').hide();
        $('#eu-cookie-accept-selected').show();
    }

</script>
<div id="eu-cookie-bar-notification" class="eu-cookie-bar-notification">
    <div class="content">
        <div class="text">
            <h1>@T("EUCookieLaw.Title")</h1>
            <div class="description">@T("EUCookieLaw.Description3")</div>
            <a class="learn-more" href="@Url.RouteUrl("Topic", new { SeName = await Html.GetTopicSeNameAsync("privacyinfo") })">@T("EUCookieLaw.LearnMore")</a>
        </div>
        <div class="purposes">
            @foreach (var purpose in Model)
            {
                <div class="purpose">
                    <div class="desc">
                        <b>@T(purpose.TitleResourceKey)</b>
                        <p>@T(purpose.DescriptionResourceKey)</p>
                    </div>
                    <div class="check">
                        @if (purpose.IsNecessary)
                        {
                            <input type="checkbox" disabled checked />
                        }
                        else
                        {
                            <input name="purpose" type="checkbox" data-purpose="@purpose.SystemName" />
                        }
                    </div>
                </div>
            }
        </div>
        <div class="cookie-buttons">
            <button type="button" class="necessary-button" id="eu-cookie-accept-necessary">@T("EUCookieLaw.AcceptNecessary")</button>
            <button type="button" class="all-button" id="eu-cookie-accept-all">@T("EUCookieLaw.AcceptAll")</button>
            <button type="button" class="selected-button" id="eu-cookie-accept-selected">@T("EUCookieLaw.AcceptSelected")</button>
        </div>
    </div>
</div>